---
- name: Check if meilisearch executable exists
  stat:
    path: "{{ ansible_facts.env.HOME }}/bin/meilisearch-{{ meilisearch_version }}"
  register: exec_stats

- name: Copy service configuration
  notify:
    - Reread meilisearch service
  template:
    src: etc/services.d/meilisearch.ini.j2
    dest: "{{ ansible_facts.env.HOME }}/etc/services.d/meilisearch.ini"

- name: Clone git repository
  git:
    repo: https://github.com/meilisearch/MeiliSearch
    dest: "{{ meilisearch_install_dir }}"
    version: "tags/v{{ meilisearch_version }}"
  when: not exec_stats.stat.exists

- name: Compile from source
  command:
    cmd: cargo build --release
    chdir: "{{ meilisearch_install_dir }}"
  when: not exec_stats.stat.exists

- name: Copy executable to bin directory
  notify:
    - Restart meilisearch service
  copy:
    src: "{{ meilisearch_install_dir }}/target/release/meilisearch"
    remote_src: yes
    dest: "{{ ansible_facts.env.HOME }}/bin/meilisearch-{{ meilisearch_version }}"
    mode: "u+x"
  when: not exec_stats.stat.exists

- meta: flush_handlers

- name: Get private meilisearch keys
  uri:
    url: "http://localhost:7700/keys"
    method: GET
    headers:
      X-Meili-API-Key: "{{ meilisearch_master_key }}"
    return_content: yes
  register: keys

- name: Print keys
  debug:
    msg: "{{ keys.json }}"
