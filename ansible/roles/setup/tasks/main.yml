---
- name: Setup PHP version
  command: "uberspace tools version use php {{ php_version }}"

- name: Setup node version
  command: "uberspace tools version use node {{ node_version }}"

- name: Check if Poetry is installed
  shell: "{{ ansible_facts.env.HOME }}/.poetry/bin/poetry --version"
  register: poetry_version
  failed_when: false

- name: Install Poetry
  when: poetry_version.rc != 0
  block:
    - name: Get Poetry installer
      get_url:
        url: "https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py"
        dest: "{{ ansible_facts.env.HOME }}/get-poetry.py"

    - name: Run Poetry installer
      command: "python{{ python_version }} {{ ansible_facts.env.HOME }}/get-poetry.py"

    - name: Remove Poetry installer
      file:
        path: "{{ ansible_facts.env.HOME }}/get-poetry.py"
        state: absent

- name: Setup Google FLoC opt out header
  command: "uberspace web header set / Permissions-Policy \"interest-cohort=()\""

- name: Get configured domains
  command: "uberspace web domain list"
  register: current_domains

- name: Add new domains
  command: "uberspace web domain add {{ item }}"
  with_items: "{{ epvotes_domains }}"
  when: "item not in current_domains.stdout_lines"

- name: Remove outdated domains
  command: "uberspace web domain del {{ item }}"
  with_items: "{{ current_domains.stdout_lines }}"
  when: "item not in epvotes_domains and not item.endswith('uber.space')"

- name: Route traffic to Apache
  command: "uberspace web backend set / --apache"

- name: Disable web server logs
  shell: |
    uberspace web log access disable
    uberspace web log apache_error disable
